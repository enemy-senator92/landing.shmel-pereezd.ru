"use strict";function validateForm(){$("[data-validate]").each(function(a,o){$(this).hasClass("validate")||($(this).addClass("validate").addClass("validate-"+a),$(".validate-"+a).validate({errorPlacement:function(a,o){},submitHandler:function(a){sendForm($(a).serialize(),$(a))}}))})}function sendForm(a,o){$.ajax({type:"GET",url:"/ajax.php?ajax=Y",data:a,dataType:"json",success:function(a,e){1==a.ERR?console.log(a.MESSAGE):2==a.ERR?console.log(a.MESSAGE):1==a.OK?$(o).find(".form__success").addClass("form__success-visible"):alert("Произошла ошибка, попробуйте повторить позже.")}})}$(function(){validateForm(),$(".choice").owlCarousel({margin:0,loop:!1,autoWidth:!0,items:6,nav:!1,responsive:{0:{items:2},768:{items:3},1024:{items:5}}});var a=$(".reviews_index__slider");a.owlCarousel({margin:0,loop:!0,nav:!1,items:1}),$(".reviews_index__arrow-next").click(function(){a.trigger("next.owl.carousel")}),$("[data-accordion]").accordion(),$(document).on("focus","input[type=tel]",function(){$(this).inputmask("+7 (999) 999-99-99",{showMaskOnHover:!1})});var o=null;$(document).on("click","[data-modal]",function(a){a.preventDefault();var e=$(this),t=e.data("modal"),l=e.data("url");e.data("url")?$.arcticmodal({overlay:{css:{backgroundColor:"rgba(0,0,0,.8)",opacity:1}},type:"ajax",url:l,afterOpen:function(a,e){null!==o&&o.arcticmodal("close"),null===o&&(o=e),validateForm()},afterClose:function(a,e){o=null}}):$(t).arcticmodal({overlay:{css:{backgroundColor:"rgba(0,0,0,.8)",opacity:1}},afterOpen:function(a,e){null!==o&&o.arcticmodal("close"),null===o&&(o=e),validateForm()},afterClose:function(a,e){o=null}})})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
